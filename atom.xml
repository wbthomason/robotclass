<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Introduction to Aerial Robotics]]></title>
  <link href="http://wbthomason.github.io/robotclass/atom.xml" rel="self"/>
  <link href="http://wbthomason.github.io/robotclass/"/>
  <updated>2014-09-02T11:41:14-04:00</updated>
  <id>http://wbthomason.github.io/robotclass/</id>
  <author>
    <name><![CDATA[Wil Thomason]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[the course]]></title>
    <link href="http://wbthomason.github.io/robotclass/blog/2014/08/23/the-course/"/>
    <updated>2014-08-23T13:47:23-04:00</updated>
    <id>http://wbthomason.github.io/robotclass/blog/2014/08/23/the-course</id>
    <content type="html"><![CDATA[<p>Welcome to ENGR 1501: Introduction to Aerial Robotics. This post will go over the course’s objectives, expectations, and structure, discuss some motivations for studying robotics, and give a brief overview of the structure of the quadcopter we’ll be building in the first few weeks. We’ll get started with the syllabus.</p>

<!--more-->

<h2 id="syllabus">Syllabus</h2>
<p>The syllabus can be found <a href="http://wbthomason.com/robotclass/resources#syllabus">here</a>; this will be where the most up to date version lives throughout the semester. Aside from the topic listing, which we’ll discuss later, the most important parts of the syllabus can be summed up as follows:</p>

<ul>
  <li><strong>Intent of the course:</strong> To provide students with a basic survey of modern robotics, in hopes of sparking interest in the field.</li>
  <li><strong>Structure of the course:</strong> Biweekly meetings on Tuesdays, which will typically consist of a short review of the week’s material followed by time to work on construction/modification of the quadcopter. The exact balance of these components will vary by week as necessary.</li>
  <li><strong>Course requirements:</strong> No textbook, but some programming experience - preferably in C/C++ and preferably dealing with embedded hardware - is required. Any prior experience with robotics is welcomed, although students with such experience are cautioned that this is very much an introductory course.</li>
  <li><strong>Course grading:</strong> The course is graded Credit/No Credit, with grades being calculated as follows: 20% from a quiz on the week’s material, given at the beginning of each class meeting, the remaining 80% from the successful completion of the quadcopter project, and a possible 10% bonus for participating in the final obstacle course challenge (assuming that this happens).</li>
</ul>

<h2 id="topics">Topics</h2>
<p>The course will go over a fairly wide range of topics. Despite the relatively short period of time we have to cover this material, this approach was chosen over a deeper focus on a smaller topic set because of the intended nature of the course as a survey of the field. However, if any students are interested in going more in depth into any of the topics covered/related topics, I’m more than willing to accommodate - to the point of changing the schedule/syllabus if there’s interest from a sufficient proportion of the students.</p>

<p>After this week’s administrivia and discussion of reasons for studying robotics, we’ll dive right into the course proper. The general arc of topics moves somewhat from lower to higher level concepts, starting with control theory and kinematics, moving through subjects in artificial intelligence, and finishing with investigation of a remarkably interesting problem in robotics (SLAM) and a section on computer vision. Another way to consider the organization of the course is in terms of loosely growing “knowledge” of the world possessed by the studied systems. We start by learning about actuators and systems that create a change in the physical world, but don’t know much about the world by themselves, move into means of reasoning about state, and wrap up by finally fully incorporating information about the world, gathered through sensors and processed through the aforementioned reasoning techniques, into actions taken by our robot.</p>

<p>Though, as with most aspects of this course, the schedule is fairly flexible, the initial construction of the quadcopter should only take the first few weeks. Starting out, we’ll be using pre-made software on the quadcopters, and - once initial construction is completed and the quadcopters are up and running - we’ll start writing our own versions of components, one by one. There will also be several programming labs experimenting with a selection of the topics from the sections on artificial intelligence and computer vision.</p>

<p>Above all else with the topics, I wish to emphasize that nothing is immutable; as the overarching intent of the entire course is to foster interest in robotics, the topics will be tweaked to better fit the interests of the students, spending more time in areas of significant interest, giving a more shallow treatment to areas which lack a similar draw, and so on.</p>

<h2 id="why-robotics">Why robotics?</h2>
<p>Clearly, given that you’re enrolled in this class/reading this page, you have some manner of interest in robotics. Maybe you’re fascinated by artificial intelligence, maybe you love kinematics or motion planning, maybe you just think videos like this</p>

<iframe width="640" height="360" src="//www.youtube.com/embed/MvRTALJp8DM" frameborder="0" allowfullscreen=""></iframe>

<p>or this</p>

<iframe width="640" height="360" src="//www.youtube.com/embed/6b4ZZQkcNEo" frameborder="0" allowfullscreen=""></iframe>

<p><br /></p>

<p>are really cool - it doesn’t matter. Robotics as a field possesses unique breadth and depth, pulling from disciplines across engineering and mathematics. It is a fusion of physical design and computing theory resulting in systems of growing intelligence capable of interacting with the surrounding world. If computers gave us the ability to increase human capability and productivity through the automation of tasks virtually, robotics brings the same power into the physical world. Robotics is a comparatively nascent field on the edge of modern knowledge, meaning that there’s very significant opportunity to make an impact on its future. And, aside from all this, robotics is just incredibly fun - there’s something uniquely amazing about watching a robot you designed and created yourself come to life and begin moving around the world.</p>

<h3 id="interesting-problems">Interesting problems</h3>

<p>As a field just beginning to move out of relatively primitive stages, robotics contains a huge number of really interesting problems. Though we’ll go into some of these in more depth over the course of the semester, I’d like to highlight a few briefly here:</p>

<h4 id="slam">SLAM</h4>

<p>SLAM, or <a href="https://en.wikipedia.org/wiki/Simultaneous_localization_and_mapping">Simultaneous Localization and Mapping</a> is one of the problems we’ll be studying this semester, and is among the most important (solved) problems in robotics today. Essentially, SLAM places a robot in a totally unknown environment, and asks how to simultaneously determine the state of the world and the state of the robot - in other words, asking both “What is the world like?” and “Where am I?” at the same time. As the answers to these questions are codependent, solving the problem is decidedly non-trivial.</p>

<h4 id="locomotion-and-mobility">Locomotion and Mobility</h4>

<p>A significant portion of robotics research focuses on how to make robots capable of navigating more “interesting” terrain than a laboratory floor (great examples of this include most of Boston Dynamics’ work, most famously <a href="http://youtu.be/cNZPRsrwumQ">BigDog</a>). Additionally, designing robots to effectively traverse environments inhospitable to humans - such as <a href="http://www.puretechltd.com/services/robotics/">pipes</a>, <a href="http://www.wired.co.uk/news/archive/2012-07/25/mantabot">underwater</a>, and - most relevant to this class - the <a href="http://newsoffice.mit.edu/2012/autonomous-robotic-plane-flies-indoors-0810">air</a> - is a very active, very interesting area of robotics research.</p>

<h4 id="adaptive-behavior">Adaptive Behavior</h4>

<p>For robots to attain their full utility, they need to be, in some sense, intelligent - a key aspect of which is the ability to adapt and respond to novel situations and synthesize an action based on past experience. Some very interesting work in this area is being done - examples include research into an algorithm for allowing a robot with no knowledge of its physical form to learn to <a href="http://youtu.be/iNL5-0_T1D0">walk</a>, more general models for the learning of <a href="http://groups.csail.mit.edu/robotics-center/public_papers/Tedrake05.pdf">bipedal locomotion</a>, and teaching a robot to avoid <a href="http://cs.stanford.edu/groups/littledog/pubs/lee-icra06.pdf">obstacles</a> through a machine learning technique.</p>

<p>We’ll be going into more depth on a number of active research areas in robotics throughout the course of the semester.</p>

<h2 id="the-quadcopter">The quadcopter</h2>

<p>A large part of this course is centered around the construction and modification of an autonomous quadrotor aircraft - it is, after all, titled “Introduction to <em>Aerial</em> Robotics”. As such, to allow us to focus on robotics more than general engineering design, I’ve created a design for a build. It’s based around the fairly common <a href="http://www.hobbyking.com/hobbyking/store/__27033__MultiWii_328P_Flight_Controller_w_FTDI_DSM2_Port.html">Multiwii</a> platform, which provides us with a sensor-rich all-in-one flight control board. Basically, it’s an <a href="http://arduino.cc/en/Main/ArduinoBoardMini">Arduino Mini</a> with a gyro, accelerometer, etc. added on-board. As the flight controller, this serves as the brains of the quadcopter. Once we’ve finished the initial build and verified its functionality using the base firmware, we’ll begin writing our own versions of the software components.
The rest of the build is pretty standard - we’re using the following parts:</p>

<ul>
  <li><strong>Motors:</strong> Turnigy SK3 <a href="http://www.hobbyking.com/hobbyking/store/__23911__Turnigy_Aerodrive_SK3_2826_1130kv_Brushless_Outrunner_Motor_USA_Warehouse_.html">motors</a>.</li>
  <li><strong>Frame:</strong> A 450mm fiberglass <a href="http://www.hobbyking.com/hobbyking/store/__49725__Q450_V3_Glass_Fiber_Quadcopter_Frame_450mm_Integrated_PCB_Version.html">frame</a> which directly incorporates the PCB for hooking up power and motor control into the frame, which should make our wiring and electronics simpler.</li>
  <li><strong>Propellors:</strong> Fairly standard <a href="http://www.hobbyking.com/hobbyking/store/__25819__10x4_5_SF_Props_2pc_CW_2_pc_CCW_Rotation_Blue_.html">propellors</a>.</li>
  <li><strong>Electronic Speed Controllers (ESCs):</strong> Turnigy MultiStar <a href="http://www.hobbyking.com/hobbyking/store/__25364__Turnigy_Multistar_20_Amp_Multi_rotor_Brushless_ESC_2_4S.html">ESCs</a> - fairly standard, and should work well with the rest of our setup. Though I don’t intend to do so in this course, they do support firmware customization, if anyone is interested in doing so.</li>
  <li><strong>Radio:</strong> A 915 Mhz <a href="http://www.hobbyking.com/hobbyking/store/__42846__FPV_Radio_Telemetry_Kit_915Mhz.html">transceiver</a> which will allow us to fairly simply connect to and control the quadcopters directly from laptops. This is preferred over the use of a more traditional RC controller because of cost constraints and our intent to make the quadcopters primarily fly fully autonomously.</li>
  <li><strong>Battery:</strong> A lightweight 1800mAh 11.1V <a href="http://www.hobbyking.com/hobbyking/store/__21343__ZIPPY_Compact_1800mAh_3S_25C_Lipo_Pack.html">LiPo battery</a>.</li>
</ul>

<h3 id="desired-expansions">Desired expansions</h3>

<p>While the current quadcopter design will suffice for many of our investigations, I’m trying to find a way to get funding for some additional sensors - specifically, some manner of rangefinder, whether IR or ultrasonic, and potentially a GPS sensor. These will enable us to more directly explore problems like the aforementioned SLAM, pathfinding, etc. I should hopefully have more updates on this in class/in a future posting.</p>

<p>That’s all for now - see you in class!</p>
]]></content>
  </entry>
  
</feed>
